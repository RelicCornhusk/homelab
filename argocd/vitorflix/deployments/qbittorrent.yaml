apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: qbittorrent
  name: qbittorrent
  namespace: vitorflix
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qbittorrent
  strategy: {}
  template:
    metadata:
      labels:
        app: qbittorrent
    spec:
      containers:
      - name: gluetun
        image: docker.io/qmcgaw/gluetun:latest
        env:
        - name: FIREWALL_INPUT_PORTS
          value: "8080"
        - name: DOT
          value: "off"
        # - name: FIREWALL_DEBUG
        #   value: "on"
        - name: VPN_SERVICE_PROVIDER
          value: protonvpn
        - name: PORT_FORWARD_ONLY
          value: "on"
        - name: VPN_PORT_FORWARDING
          value: "on"
        - name: VPN_PORT_FORWARDING_UP_COMMAND
          value: /bin/sh -c 'wget -O- --retry-connrefused --post-data "json={\"listen_port\":{{PORTS}}}" http://127.0.0.1:8080/api/v2/app/setPreferences 2>&1'
        - name: VPN_TYPE
          value: wireguard
        - name: WIREGUARD_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: protonvpn-wireguard
              key: private-key
        # - name: SERVER_COUNTRIES
        #   value: canada
        # - name: OPENVPN_USER
        #   valueFrom:
        #     secretKeyRef:
        #       name: openvpn-auth
        #       key: openvpn-user 
        # - name: OPENVPN_PASSWORD
        #   valueFrom:
        #     secretKeyRef:
        #       name: openvpn-auth
        #       key: openvpn-password
        resources: {}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /gluetun
          name: config-gluetun
      - name: qbittorrent
        env:
        # - name: DOCKER_MODS
        #   value: ghcr.io/vuetorrent/vuetorrent-lsio-mod:latest
        - name: WEBUI_PORT
          value: "8080"
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        image: lscr.io/linuxserver/qbittorrent:5.0.3 ## using this version for qbit_manage compatibility
        resources: {}
        command: ["sh", "-c"]
        args:
        - |
          mkdir -p /data/torrents &&
          exec /init
        ports:
        - containerPort: 8080
        securityContext:
          capabilities:
            drop:
            - CAP_MKNOD
            - CAP_NET_RAW
            - CAP_AUDIT_WRITE
        volumeMounts:
        - mountPath: /config
          name: config-qbittorrent
        - mountPath: /data
          name: data

      # No longer needed if using custom VPN_PORT_FORWARDING_UP_COMMAND
      # - name: qbittorrent-port-manager
      #   image: patrickaclark/qbittorrent-port-manager:latest
      #   env: 
      #   - name: BITTORRENT_SERVER
      #     value: "localhost"
      #   - name: QBITTORRENT_PORT
      #     value: "8080"
      #   - name: HTTP_S
      #     value: "http"
      #   - name: GLUETUN_HOST
      #     value: "localhost"
      #   - name: GLUETUN_PORT
      #     value: "8000"
      #   - name: RECHECK_TIME
      #     value: "60"     

      - name: qbitmanage
        image: docker.io/bobokun/qbit_manage:latest
        env:
        - name: QBT_TAG_UPDATE
          value: "false"
        - name: QBT_REM_ORPHANED
          value: "true"
        - name: QBT_REM_UNREGISTERED
          value: "false"
        - name: QBT_DIVIDER
          value: =
        - name: QBT_LOGFILE
          value: activity.log
        - name: QBT_CONFIG
          value: config.yml
        - name: QBT_WIDTH
          value: "100"
        - name: QBT_TAG_TRACKER_ERROR
          value: "false"
        - name: QBT_SKIP_CLEANUP
          value: "false"
        - name: QBT_CAT_UPDATE
          value: "true"
        - name: QBT_LOG_LEVEL
          value: INFO
        - name: QBT_DRY_RUN
          value: "false"
        - name: QBT_CROSS_SEED
          value: "false"
        - name: QBT_RECHECK
          value: "false"
        - name: QBT_RUN
          value: "false"
        - name: QBT_TAG_NOHARDLINKS
          value: "true"
        - name: QBT_SCHEDULE
          value: "30"
        volumeMounts:
        - mountPath: /config
          name: config-qbitmanage
        - mountPath: /data
          name: data
      # - image: localhost/jelly-qbit-toggle:latest
      #   name: media-servicesjelly-qbit-toggle1
      #   ports:
      #   - containerPort: 5000
      #     hostPort: 5000
      #   - containerPort: 6881
      #     hostPort: 6881
      #   - containerPort: 8080
      #     hostPort: 8080
      #   - containerPort: 8388
      #     hostPort: 8388
      #   - containerPort: 8888
      #     hostPort: 8888
      #   - containerPort: 6881
      #     hostPort: 6881
      #     protocol: UDP
      #   - containerPort: 8388
      #     hostPort: 8388
      #     protocol: UDP
      #   resources: {}
      #   securityContext:
      #     capabilities:
      #       drop:
      #       - CAP_MKNOD
      #       - CAP_NET_RAW
      #       - CAP_AUDIT_WRITE
      volumes:
      - persistentVolumeClaim:
          claimName: data
        name: data
      - persistentVolumeClaim:
          claimName: config-qbitmanage
        name: config-qbitmanage
      - persistentVolumeClaim:
          claimName: config-qbittorrent
        name: config-qbittorrent
      - persistentVolumeClaim:
          claimName: config-gluetun
        name: config-gluetun
      